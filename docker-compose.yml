version: "3.9"

services:
  tach-base:
    container_name: tach-base
    image: tach-challenge:0.6
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./petisco_sanic:/app/petisco_sanic
      - ./accounts:/app/accounts
      - ./transactions:/app/transactions
    networks:
      - tach

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: "on-failure"
    logging:
      options:
        max-size: "3m"
        max-file: "2"
    expose:
      - 5672
      - 15672
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - tach

  mongo:
    image: mongo:7
    container_name: mongo
    logging:
      options:
        max-size: "3m"
        max-file: "2"
    restart: "on-failure"
    env_file:
      - .env
    expose:
      - 27017
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - tach_mongo_data:/data/db
    # prevent logs
    command: mongod --quiet --logpath /dev/null
    networks:
      - tach

  mongo-express:
    image: mongo-express:1-20-alpine3.19
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - .env
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
    depends_on:
      - mongo
    networks:
      - tach

  accounts:
    container_name: accounts
    env_file:
      - accounts.env
    ports:
      - 5050:5050
    depends_on:
      - mongo
      - rabbitmq
    extends:
      service: tach-base
    command: ["poetry", "run", "python", "accounts/main.py"]

  transactions:
    container_name: transactions
    env_file:
      - transactions.env
    ports:
      - 5051:5051
    depends_on:
      - mongo
      - rabbitmq
    extends:
      service: tach-base
    command: ["poetry", "run", "python", "transactions/main.py"]

volumes:
  tach_mongo_data:

networks:
  tach:
    name: tach
